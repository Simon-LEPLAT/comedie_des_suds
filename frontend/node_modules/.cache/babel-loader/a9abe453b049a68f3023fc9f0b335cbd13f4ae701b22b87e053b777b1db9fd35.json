{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProgramData\\\\Splashtop\\\\Splashtop Remote Client for RMM\\\\Simon\\\\comedie_des_suds\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isInitialized, setIsInitialized] = useState(false);\n\n  // Create a custom axios instance with default config\n  const api = axios.create({\n    baseURL: 'http://localhost:5000/api',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n\n  // Add request interceptor to add token to all requests\n  api.interceptors.request.use(config => {\n    const storedToken = localStorage.getItem('token');\n    if (storedToken) {\n      config.headers.Authorization = `Bearer ${storedToken}`;\n    }\n    return config;\n  }, error => Promise.reject(error));\n\n  // Add response interceptor to handle token errors\n  api.interceptors.response.use(response => response, error => {\n    var _error$response, _error$response2;\n    // Only handle auth errors if we're initialized\n    if (isInitialized && (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 || ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 403)) {\n      // Don't clear token during profile fetch to prevent logout loops\n      if (!error.config.url.includes('/users/profile')) {\n        localStorage.removeItem('token');\n        setToken(null);\n        setUser(null);\n      }\n    }\n    return Promise.reject(error);\n  });\n  const refreshToken = useCallback(async () => {\n    try {\n      const storedToken = localStorage.getItem('token');\n      if (!storedToken) {\n        setLoading(false);\n        setIsInitialized(true);\n        return;\n      }\n\n      // Use direct axios call to avoid interceptor loop\n      const res = await axios.get('http://localhost:5000/api/users/profile', {\n        headers: {\n          Authorization: `Bearer ${storedToken}`\n        }\n      });\n      if (res.data.status === 'success') {\n        setUser(res.data.data.user);\n        setToken(storedToken);\n      } else {\n        // Clear token if response is not successful\n        localStorage.removeItem('token');\n        setToken(null);\n        setUser(null);\n      }\n    } catch (err) {\n      console.error('Token refresh error:', err);\n      // Only clear token if it's not a network error\n      if (err.response) {\n        localStorage.removeItem('token');\n        setToken(null);\n        setUser(null);\n      }\n    } finally {\n      setLoading(false);\n      setIsInitialized(true);\n    }\n  }, []);\n  useEffect(() => {\n    refreshToken();\n  }, [refreshToken]);\n  const login = async (email, password) => {\n    try {\n      // Use direct axios call for login\n      const res = await axios.post('http://localhost:5000/api/users/login', {\n        email,\n        password\n      });\n      if (res.data.token) {\n        localStorage.setItem('token', res.data.token);\n        setToken(res.data.token);\n        setUser(res.data.data.user);\n        setError(null);\n      }\n      return res.data;\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Login error:', err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Une erreur est survenue lors de la connexion');\n      throw err;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setUser(null);\n    setError(null);\n  };\n  const register = async userData => {\n    try {\n      const res = await api.post('/users/register', userData);\n      if (res.data.token) {\n        localStorage.setItem('token', res.data.token);\n        setToken(res.data.token);\n        setUser(res.data.data.user);\n        setError(null);\n      }\n      return res.data;\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      console.error('Registration error:', err);\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Une erreur est survenue lors de l\\'inscription');\n      throw err;\n    }\n  };\n  const updateProfile = async userData => {\n    try {\n      const res = await api.put('/users/profile', userData);\n      if (res.data.status === 'success') {\n        setUser(res.data.data.user);\n        setError(null);\n      }\n      return res.data;\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      console.error('Profile update error:', err);\n      setError(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || 'Une erreur est survenue lors de la mise Ã  jour du profil');\n      throw err;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      token,\n      loading,\n      error,\n      setError,\n      login,\n      logout,\n      register,\n      updateProfile,\n      refreshToken,\n      api\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"nbUpfUA2PXPPE34Hfx110I//3kY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useCallback","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","token","setToken","localStorage","getItem","loading","setLoading","error","setError","isInitialized","setIsInitialized","api","create","baseURL","headers","interceptors","request","use","config","storedToken","Authorization","Promise","reject","response","_error$response","_error$response2","status","url","includes","removeItem","refreshToken","res","get","data","err","console","login","email","password","post","setItem","_err$response","_err$response$data","message","logout","register","userData","_err$response2","_err$response2$data","updateProfile","put","_err$response3","_err$response3$data","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/ProgramData/Splashtop/Splashtop Remote Client for RMM/Simon/comedie_des_suds/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [token, setToken] = useState(localStorage.getItem('token'));\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [isInitialized, setIsInitialized] = useState(false);\r\n\r\n  // Create a custom axios instance with default config\r\n  const api = axios.create({\r\n    baseURL: 'http://localhost:5000/api',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  });\r\n\r\n  // Add request interceptor to add token to all requests\r\n  api.interceptors.request.use(\r\n    (config) => {\r\n      const storedToken = localStorage.getItem('token');\r\n      if (storedToken) {\r\n        config.headers.Authorization = `Bearer ${storedToken}`;\r\n      }\r\n      return config;\r\n    },\r\n    (error) => Promise.reject(error)\r\n  );\r\n\r\n  // Add response interceptor to handle token errors\r\n  api.interceptors.response.use(\r\n    (response) => response,\r\n    (error) => {\r\n      // Only handle auth errors if we're initialized\r\n      if (isInitialized && (error.response?.status === 401 || error.response?.status === 403)) {\r\n        // Don't clear token during profile fetch to prevent logout loops\r\n        if (!error.config.url.includes('/users/profile')) {\r\n          localStorage.removeItem('token');\r\n          setToken(null);\r\n          setUser(null);\r\n        }\r\n      }\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n\r\n  const refreshToken = useCallback(async () => {\r\n    try {\r\n      const storedToken = localStorage.getItem('token');\r\n      if (!storedToken) {\r\n        setLoading(false);\r\n        setIsInitialized(true);\r\n        return;\r\n      }\r\n\r\n      // Use direct axios call to avoid interceptor loop\r\n      const res = await axios.get('http://localhost:5000/api/users/profile', {\r\n        headers: {\r\n          Authorization: `Bearer ${storedToken}`\r\n        }\r\n      });\r\n      \r\n      if (res.data.status === 'success') {\r\n        setUser(res.data.data.user);\r\n        setToken(storedToken);\r\n      } else {\r\n        // Clear token if response is not successful\r\n        localStorage.removeItem('token');\r\n        setToken(null);\r\n        setUser(null);\r\n      }\r\n    } catch (err) {\r\n      console.error('Token refresh error:', err);\r\n      // Only clear token if it's not a network error\r\n      if (err.response) {\r\n        localStorage.removeItem('token');\r\n        setToken(null);\r\n        setUser(null);\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n      setIsInitialized(true);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    refreshToken();\r\n  }, [refreshToken]);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      // Use direct axios call for login\r\n      const res = await axios.post('http://localhost:5000/api/users/login', { \r\n        email, \r\n        password \r\n      });\r\n      \r\n      if (res.data.token) {\r\n        localStorage.setItem('token', res.data.token);\r\n        setToken(res.data.token);\r\n        setUser(res.data.data.user);\r\n        setError(null);\r\n      }\r\n      \r\n      return res.data;\r\n    } catch (err) {\r\n      console.error('Login error:', err);\r\n      setError(err.response?.data?.message || 'Une erreur est survenue lors de la connexion');\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setToken(null);\r\n    setUser(null);\r\n    setError(null);\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      const res = await api.post('/users/register', userData);\r\n      \r\n      if (res.data.token) {\r\n        localStorage.setItem('token', res.data.token);\r\n        setToken(res.data.token);\r\n        setUser(res.data.data.user);\r\n        setError(null);\r\n      }\r\n      \r\n      return res.data;\r\n    } catch (err) {\r\n      console.error('Registration error:', err);\r\n      setError(err.response?.data?.message || 'Une erreur est survenue lors de l\\'inscription');\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  const updateProfile = async (userData) => {\r\n    try {\r\n      const res = await api.put('/users/profile', userData);\r\n      \r\n      if (res.data.status === 'success') {\r\n        setUser(res.data.data.user);\r\n        setError(null);\r\n      }\r\n      \r\n      return res.data;\r\n    } catch (err) {\r\n      console.error('Profile update error:', err);\r\n      setError(err.response?.data?.message || 'Une erreur est survenue lors de la mise Ã  jour du profil');\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{\r\n      user,\r\n      token,\r\n      loading,\r\n      error,\r\n      setError,\r\n      login,\r\n      logout,\r\n      register,\r\n      updateProfile,\r\n      refreshToken,\r\n      api\r\n    }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}